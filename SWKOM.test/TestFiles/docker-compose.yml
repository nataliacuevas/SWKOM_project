version: '3.8'

services:
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:latest
    container_name: rabbitmq
    ports: 
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS:-guest}
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER:-guest}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_DEFAULT_VHOST:-mrRabbit}
    networks:
      - app-network
    restart: unless-stopped

  sws-api:
    build:
      context: ../../../sws
      dockerfile: ./Dockerfile
    ports:
      - "8080:8080"  
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
    networks:
      - app-network


  ocrworker:
    container_name: ocrworker
    build:
      context: ../../../OCRworker 
      dockerfile: ./Dockerfile
    environment:
      - MESSAGE_QUEUE_HOST=rabbitmq
      - OCR_CONFIG=default 
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - rabbitmq
    networks:
      - app-network

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    networks:
      - app-network
    
  postgres:
    container_name: postgres  
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      PGDATA: /data/postgres
    networks:
      - app-network
    restart: unless-stopped


networks:
  app-network:
    driver: bridge
